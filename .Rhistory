rmarkdown::render_site
library(rmarkdown)
render_site()
library(WaterML)
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
info <- GetSiteInfo(server, "odm2timeseries:160065_Crosslands")
info
humidity <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:Seeed_BME280_humidity", Sys.Date()-7,endDate=Sys.Date()+2 )
head(humidity)
tail(humidity)
str(humidity)
humidity <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:Seeed_BME280_humidity", Sys.Date()-7,endDate=Sys.Date()+2 )
tidy <- separate(humidity, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
library(tidyverse)
tidy <- separate(humidity, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
humidity$date <- tidy$date
humidity$datetime <- tidy$datetime
library(ggplot2)
p <- ggplot(humidity, aes(x=datetime, y=DataValue)) +
geom_point(colour="#424949", size=0.5) +
geom_line(colour="grey70",alpha=0.5, linetype="dotted") +
theme_minimal() +
theme(panel.background = element_rect(colour=NA, fill="grey97")) +
xlab("Date") +
ylab("Humidity (%)")
p
library(WaterML)
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", Sys.Date()-7,endDate=Sys.Date()+2 )
library(tidyverse)
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(wdepth, DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
library(WaterML)
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
info <- GetSiteInfo(server, "odm2timeseries:160065_Crosslands")
info
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
info <- GetSiteInfo(server, "odm2timeseries:160065_Crosslands")
library(WaterML)
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
info <- GetSiteInfo(server, "odm2timeseries:160065_Crosslands")
info
btemp <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:EnviroDIY_Mayfly_Temp",startDate = Sys.Date()-7,endDate=Sys.Date()+2)
bram <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:EnviroDIY_Mayfly_FreeSRAM",startDate = Sys.Date()-7,endDate=Sys.Date()+2)
head(bram)
vars <- c('Depth', 'Air Temperature', 'Water Temperature', 'Humidity')
sensors <- c('MaxBotix MB7386', 'Seeed BME280', 'Adafruit DS18B20','Seeed BME280')
varsens <- data.frame("vars"=vars, "sensors"=sensors)
varsens
varsens$sensors[varsens$sensors == 'Depth']
varsens$sensors[varsens$sensors == 'Depth',]
varsens$sensors == 'Depth'
varsens$sensors[varsens$vars == 'Depth']
varsens$sensors[varsens$vars == 'Depth'][1]
varsens
varsens$sensors[varsens$vars == 'Depth']
as.character(varsens$sensors[varsens$vars == 'Depth'][1])
library(devtools)
install_github("kableextra")
install_github("haozhu233/kableExtra")
install.packages("readr"0)
install.packages("readr")
install_github("haozhu233/kableExtra")
install.packages("kableExtra")
library(kableExtra)
install_github("haozhu233/kableExtra")
uninstall.packages("readr")
uninstall.package("readr")
remove.packages("readr")
install_github("haozhu233/kableExtra")
install_github("haozhu233/kableExtra")
install_github(tidyverse0)
install_github(tidyverse)
install_github("tidyverse/readr")
install_github("haozhu233/kableExtra")
library(kableExtra)
install.packages("rmarkdown")
install.packages("rmarkdown")
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance)
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
library(WaterML)
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
saveRDS(wdepth, "cache_wdepth.RDS")
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
library(tidyverse)
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_date <- tail(cache_wdepth, n=1)
cache_wdepth <- readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_date <- tail(cache_wdepth, n=1)
cache_date
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
head(wdepth)
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_wdepth <- readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_date <- tail(cache_wdepth, n=1)
cache_date
cache_date <- tail(cache_wdepth$date, n=1)
cache_date
head(tidy$date)
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
wdepth_backup <- wdepth
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_wdepth <- readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_date <- tail(cache_wdepth$date, n=1)
cache_dte
cache_date
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date,endDate=Sys.Date()+2 )
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date,endDate=Sys.Date()+2 )
test <- rbind(cache_wdepth, wdepth)
head(wdepth)
wdepth <- wdepth_backup
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
test <- rbind(cache_wdepth, wdepth)
test <- union(cache_wdepth, wdepth)
tail(cache_wdepth)
readRDS(cache_wdepth.RDS)
head(test)
str(test)
cache_wdepth <- readRDS("cache_wdepth.RDS")
cache_date <- tail(cache_wdepth$date, n=1)-1
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date,endDate=Sys.Date()+2 )
str(cache_date)
cache_wdepth <- readRDS("cache_wdepth.RDS")
head(cache_wdepth)
wdepth_backup <- wdepth
wdepth <- wdepth_backup
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_wdepth <- readRDS("cache_wdepth.RDS")
head(cache_wdepth)
wdepth_backup <- wdepth
wdepth <- wdepth_backup
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
head(wdepth)
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_wdepth <- readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
head(cache_wdepth)
cache_wdepth <- readRDS("cache_wdepth.RDS")
head(cache_wdepth)
View(cache_wdepth)
cache_wdepth <- readRDS("cache_wdepth.RDS")
View(cache_wdepth)
View(cache_wdepth)
cache_wdepth <- readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
View(cache_wdepth)
View(cache_wdepth)
cache_wdepth <- readRDS("C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/Crosslands/cache_wdepth.RDS")
cache_wdepth <- readRDS("cache_wdepth.RDS")
wdepth_backup <- wdepth
wdepth <- wdepth_backup
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/cache_wdepth.RDS")
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
wdepth_backup <- wdepth
wdepth <- wdepth_backup
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/cache_wdepth.RDS")
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
info <- GetSiteInfo(server, "odm2timeseries:160065_Crosslands")
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance")
wdepth_backup <- wdepth
wdepth <- wdepth_backup
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
saveRDS(wdepth, "C:/Users/bcrary/Desktop/Projects/BigCZ/EnviroDIY_DemoApp/cache_wdepth.RDS")
cache_wdepth <- readRDS("cache_wdepth.RDS")
View(cache_wdepth)
View(cache_wdepth)
cache_date <- tail(cache_wdepth$date, n=1)-1
cache_date
cache_date <- tail(cache_wdepth$date, n=1)-1*60*60*24
cache_date
cache_date <- tail(cache_wdepth$date, n=1)-2*60*60*24
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date,endDate=Sys.Date()+2 )
library(WaterML)
server <- "http://odm2wofpy.uwrl.usu.edu:8080/odm2timeseries/soap/cuahsi_1_0/.wsdl"
info <- GetSiteInfo(server, "odm2timeseries:160065_Crosslands")
cache_wdepth <- readRDS("cache_wdepth.RDS")
cache_date <- tail(cache_wdepth$date, n=1)-2*60*60*24
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date,endDate=Sys.Date()+2 )
bbatt <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:EnviroDIY_Mayfly_Volt",startDate = Sys.Date()-7,endDate=Sys.Date()+2)
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
library(tidyverse)
cache_wdepth <- readRDS("cache_wdepth.RDS")
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date, endDate=Sys.Date()+2 )
library(tidyverse)
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
wdepth <- union(cache_wdepth, wdepth)
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date, endDate=Sys.Date()+2 )
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))-11*60*60
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
str(wdepth)
str(cache_wdepth)
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date, endDate=Sys.Date()+2 )
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
wdepth <- union(cache_wdepth, wdepth)
mindate <- min(wdepth$datetime)
maxdate <- max(wdepth$datetime)
p <- ggplot(wdepth,aes(x=datetime, y=Depth)) +
geom_point(colour="#5499C7", size=0.5) +
geom_line(colour="grey70", alpha=0.5, linetype="dotted") +
theme_minimal() +
theme(panel.background = element_rect(colour=NA, fill="grey97")) +
xlab("Date") +
ylab("Water Depth (m)") +
xlim(mindate, Sys.time())
p
plotly_p <- ggplotly(p, dynamicTicks=TRUE) %>% layout(margin=list(r=20, l=60, t=20, b=50))
plotly_p
library(plotly)
plotly_p <- ggplotly(p, dynamicTicks=TRUE) %>% layout(margin=list(r=20, l=60, t=20, b=50))
plotly_p
cache_wdepth <- readRDS(filepath)
cache_date <- tail(cache_wdepth$date, n=1)-2*60*60*24
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date, endDate=Sys.Date()+2 )
wdepth <- union(cache_wdepth, wdepth)
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date, endDate=Sys.Date()+2 )
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
#wdepth_dmax <- wdepth %>% group_by(date) %>% summarise(maxDepth=max(Depth))
wdepth <- union(cache_wdepth, wdepth)
str(wdepth)
cache_wdepth <- readRDS(filepath)
cache_date <- tail(cache_wdepth$date, n=1)-2*60*60*24
wdepth <- GetValues(server, siteCode="odm2timeseries:160065_Crosslands", variableCode="odm2timeseries:MaxBotix_MB7386_Distance", cache_date, endDate=Sys.Date()+2 )
tidy <- separate(wdepth, time, into=c("date", "time"), sep="T")
tidy$datetime <- paste(tidy$date, " ", tidy$time,sep="")
tidy$datetime <- as.POSIXct(strptime(tidy$datetime,format="%Y-%m-%d %H:%M:%S"))-11*60*60
tidy$date <- as.POSIXct(strptime(tidy$date, format="%Y-%m-%d"))
wdepth$datetime <- tidy$datetime
wdepth$date <- tidy$date
wdepth <- wdepth %>% filter(DataValue != 0) #keep non zero values
wdepth <- wdepth %>% filter(DataValue != 9999) # error code from sensor
wdepth <- wdepth %>% filter(DataValue < 4000) #
wdepth <- wdepth %>% filter(DataValue > 1000) # depths greater than 3 m
wdepth$Depth = (4000 - wdepth$DataValue)/1000
#wdepth_dmax <- wdepth %>% group_by(date) %>% summarise(maxDepth=max(Depth))
test <- union(cache_wdepth, wdepth)
test
head(test)
str(test)
str(wdepth)
str(cache_wdepth)
str(wdepth)
str(test$Depth)
test2 <- unlist(test)
str(test2)
head(test2)
str(test)
test2 <- data.frame("datetime" = test$datetime, "Depth" = test$Depth)
head(test2)
str(datetime)
str(test2)
head(test2)
test2 <- data.frame("datetime" = test$datetime, "Depth" = test$Depth)
p <- ggplot(test2,aes(x=datetime, y=Depth)) +
geom_point(colour="#5499C7", size=0.5) +
geom_line(colour="grey70", alpha=0.5, linetype="dotted") +
theme_minimal() +
theme(panel.background = element_rect(colour=NA, fill="grey97")) +
xlab("Date") +
ylab("Water Depth (m)") +
xlim(mindate, Sys.time())
p
p
test <- rbind(cache_wdepth, wdepth)
head(test)
test <- unique(rbind(cache_wdepth, wdepth))
remove.packages(dplyr)
remove.packages("dplyr")
install_github("tidyverse/dplyr")
library(devtools)
install_github("tidyverse/dplyr")
install.package("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("purr")
install.packages("purrr")
remove.packages("purrr")
install.packages("purrr")
